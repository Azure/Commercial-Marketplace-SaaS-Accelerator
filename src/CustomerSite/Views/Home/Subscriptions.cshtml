@using Marketplace.SaaS.Accelerator.Services.Models
@model Marketplace.SaaS.Accelerator.Services.Models.SubscriptionViewModel
@{
    ViewData["Title"] = "Subscriptions";
}

<div class="text-center">
    <div class="container">
        <br />
        @if (!Model.IsSuccess && !string.IsNullOrEmpty(Model.ErrorMessage))
        {
            <div class="alert alert-danger">
                <strong>Error!</strong> @Model.ErrorMessage
            </div>
        }
        <form method="post">
            <div>
                <div class="card-body">
                    <div>
                        <div class="text-start">
                            <span class="cm-section-heading">Subscriptions</span>
                        </div>
                        @if (Model.Subscriptions.Count() > 0)
                        {
                            <table id="table" class="table table-bordered dt-responsive cm-table mt20">
                                <thead class="cm-table-head">
                                    <tr>
                                        <th>Name</th>
                                        <th>Offer</th>
                                        <th>Plan</th>
                                        <th>Quantity</th>
                                        <th>Status</th>
                                        <th>Action</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @for (var i = 0; i < Model.Subscriptions.Count; i++)
                                    {
                                        var subscription = Model.Subscriptions[i];
                                        <tr>
                                            <td class="text-left">
                                                @Html.HiddenFor(s => s.Subscriptions[i].Id)
                                                @Html.HiddenFor(s => s.Subscriptions[i].PlanId)
                                                @subscription.Name
                                            </td>
                                            <td class="text-left">@subscription.OfferId</td>
                                            <td class="text-left">@subscription.PlanId</td>
                                            <td class="text-left">
                                                @if (@subscription.IsPerUserPlan)
                                                {
                                                    @subscription.Quantity
                                                }
                                                else
                                                {
                                                    <span>N/A</span>
                                                }
                                            </td>
                                            <td class="text-left">@subscription.SubscriptionStatus</td>
                                            <td class="text-left  cm-ellipsis">
                                                <div class="nav-item dropdown">
                                                    <a class="nav-link dropdown cm-link-button" href="#" id="dropdown01" data-bs-toggle="dropdown" aria-haspopup="true" aria-expanded="false"><i class="fa fa-bars"></i></a>
                                                    <div class="dropdown-menu">
                                                        @if (subscription.SubscriptionStatus == SubscriptionStatusEnumExtension.Subscribed)
                                                        {
                                                            <a class="dropdown-item cm-dropdown-option" asp-action="ViewSubscription" asp-route-subscriptionId="@Model.Subscriptions[i].Id" asp-route-planId="@Model.Subscriptions[i].PlanId" asp-route-operation="Deactivate">Unsubscribe</a>
                                                            @if (subscription.AcceptSubscriptionUpdates == true)
                                                            {
                                                                <a class="dropdown-item cm-dropdown-option" onclick="ViewSubscriptionDetail('@Model.Subscriptions[i].Id')" data-bs-toggle="modal" data-bs-target="#myModal">Change Plan</a>
                                                                @if (subscription.IsPerUserPlan)
                                                                {
                                                                    <a class="dropdown-item cm-dropdown-option" onclick="ViewSubscriptionQuantityDetail('@Model.Subscriptions[i].Id')" data-bs-toggle="modal"  data-bs-target="#myModal">Change Quantity</a>
                                                                }                                                      
                                                                <a class="dropdown-item cm-dropdown-option" target="_blank" href="@Model.SaaSAppUrl" title="Click here to go to SaaS App">SaasApp</a>
                                                            }
                                                        }
                                                        @if (subscription.SubscriptionStatus == SubscriptionStatusEnumExtension.PendingFulfillmentStart && subscription.IsAutomaticProvisioningSupported == true)
                                                        {
                                                            <a class="dropdown-item cm-dropdown-option" asp-action="ViewSubscription" asp-route-subscriptionId="@Model.Subscriptions[i].Id" asp-route-planId="@Model.Subscriptions[i].PlanId" asp-route-operation="Activate">Activate</a>
                                                        }
                                                        @if (subscription.SubscriptionStatus == SubscriptionStatusEnumExtension.PendingFulfillmentStart && subscription.IsAutomaticProvisioningSupported == false)
                                                        {
                                                            <a class="dropdown-item cm-dropdown-option" asp-action="ViewSubscription" asp-route-subscriptionId="@Model.Subscriptions[i].Id" asp-route-planId="@Model.Subscriptions[i].PlanId" asp-route-operation="Activate">Subscribe</a>
                                                        }
                                                        <a class="dropdown-item cm-dropdown-option" data-bs-toggle="modal" data-bs-target="#myModal" onclick="ViewSubscriptionlogdetailsById('@Model.Subscriptions[i].Id')">Activity Log</a>

                                                        
                                                    </div>
                                                </div>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        }

                        else
                        {
                            <div class="cm-panel-default mt40">
                                <div class="p-3 mr420">
                                    <p>
                                        You do not have subscriptions yet. Please purchase the offer from <a href="https://portal.azure.com/" target="_blank">Azure</a>
                                    </p>
                                </div>
                            </div>

                        }
                    </div>
                </div>
            </div>
            <!-- Modal -->
            @* <div class="modal" id="myModal" role="dialog" tabindex="-1"> *@

            <!-- Button trigger modal -->
            @* <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#myModal">
                Launch demo modal
            </button> *@
            <p></p>
            <!-- Modal -->
            <div class="modal" id="myModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="exampleModalLabel">Modal title</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        @* <div class="modal-body">
                            
                        </div>
                        <div class="modal-footer">
                            
                            
                        </div> *@
                    </div>
                </div>
            </div>


            
        </form>
    </div>
</div>


@* <script type="text/javascript">
    const mynewModal = new bootstrap.Modal('#myModal');

    setTimeout(() => {
        mynewModal.hide();
    }, 1000);
    mynewModal.dispose();


</script> *@
<script>
    function ViewSubscriptionQuantityDetail(subscriptionId) {
        $.ajax({
            type: "Get",
            url: "SubscriptionQuantityDetail",
            data: { subscriptionId: subscriptionId },
            contentType: "application/json; charset=utf-8",
            datatype: "json",
            success: function (data) {
                $('#myModal').html(data);
                $('#myModal').modal();
            },
            error: function () {
                swal({
                    title: "Error",
                    text: "Content load failed.",
                    icon: "Error"
                })
            }
        });
    }
    function ViewSubscriptionDetail(subscriptionId) {
        $.ajax({
            type: "Get",
            url: "SubscriptionDetail",
            data: { subscriptionId: subscriptionId },
            contentType: "application/json; charset=utf-8",
            datatype: "json",
            success: function (data) {
                $('#myModal').html(data);
                $('#myModal').modal();

            },
            error: function () {
                swal({
                    title: "Error",
                    text: "Content load failed.",
                    icon: "Error"
                })
            }
        });
    }
    function ViewSubscriptionlogdetailsById(subscriptionId) {
        $.ajax({
            type: "Get",
            url: "SubscriptionLogDetail",
            data: { subscriptionId: subscriptionId },
            contentType: "application/json; charset=utf-8",
            datatype: "json",
            success: function (data) {
                $('#myModal').html(data);
               
                
                $('#myModal').modal();
                // const myel = new bootstrap.Modal('#myModal');
                // document.querySelector('.btn-close').addEventListener('click', () => {
                //        myel.hide();
                //     });

                // var myModal = document.getElementById('myModal')
                

                // document.addEventListener('shown.bs.modal', function () {
                //     myInput.focus()
                // })
              
                
            },
            error: function () {
                swal({
                    title: "Error",
                    text: "Content load failed.",
                    icon: "Error"
                })
            }
        });
    }

    function confirmDialog() {
        var newPlanName = $('#PlanId').val();
        swal({
            text: "Are you sure you want to switch to " + newPlanName + " plan?",
            icon: "warning",
            buttons: true,
            dangerMode: true,
        })
            .then((willChange) => {
                debugger;
                if (willChange) {
                    $("#frmButton").prop("disabled", true);
                    $("#frmSpinner").prop("hidden", false);
                    $("#frmSubscriptionDetail").submit();
                }
            });
    }

    function confirmQuantityDialog() {
        var newQuantity = $('#Quantity').val();
        swal({
            text: "Are you sure you want to Change the quantity to " + newQuantity + "?",
            icon: "warning",
            buttons: true,
            dangerMode: true,
        })
            .then((willChange) => {
                debugger;
                if (willChange) {
                    $("#frmButton").prop("disabled", true);
                    $("#frmSpinner").prop("hidden", false);
                    $("#frmSubscriptionQuantityDetail").submit();
                }
            });
    }
</script>